Home automation allows you to control household devices remotely, enhancing convenience and energy efficiency. One effective method for implementing home automation is through Bluetooth technology, enabling wireless communication between your smartphone and home appliances. Below is a guide on setting up a Bluetooth-based home automation system using Arduino, complete with code explanations and hardware setup.​

Components Needed:

    Arduino UNO: Acts as the central controller for the system.​

    HC-05 Bluetooth Module: Facilitates Bluetooth communication between the Arduino and your smartphone.​
    Utmel

    Relay Module: Allows the Arduino to control high-voltage appliances safely.​
    Technical Ustad

    Smartphone with Bluetooth Capability: Used to send control commands to the Arduino via the HC-05 module.​
    Electro Invention+2Utmel+2Hackster+2

    Connecting Wires: For making necessary connections between components.​

Circuit Diagram:

    HC-05 Bluetooth Module Connections:

        VCC: Connect to the 5V pin on the Arduino.​

        GND: Connect to the GND pin on the Arduino.​

        TXD: Connect to the RX pin (pin 0) on the Arduino.​
        Hackster+1Utmel+1

        RXD: Connect to the TX pin (pin 1) on the Arduino.​

    Relay Module Connections:

        VCC: Connect to the 5V pin on the Arduino.​

        GND: Connect to the GND pin on the Arduino.​
        Technical Ustad

        IN1, IN2, IN3, IN4: Connect to digital pins 2, 3, 4, and 5 on the Arduino, respectively. These pins control the relays.​

    Appliance Connections:

        Connect the appliances to the relay outputs as per the relay module's specifications. Ensure that the appliances are rated for the relay's switching capacity.​

Arduino Code Explanation:

// Define pin numbers for the relays
int relay1 = 2;
int relay2 = 3;
int relay3 = 4;
int relay4 = 5;

void setup() {
  // Start serial communication at 9600 baud rate
  Serial.begin(9600);

  // Set relay pins as OUTPUT
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  pinMode(relay3, OUTPUT);
  pinMode(relay4, OUTPUT);
}

void loop() {
  // Check if data is available to read from Bluetooth
  if (Serial.available() > 0) {
    char command = Serial.read(); // Read the incoming byte

    // Control relay1
    if (command == '1') {
      digitalWrite(relay1, HIGH); // Turn ON appliance connected to relay1
    } else if (command == '0') {
      digitalWrite(relay1, LOW);  // Turn OFF appliance connected to relay1
    }

    // Control relay2
    if (command == '3') {
      digitalWrite(relay2, HIGH); // Turn ON appliance connected to relay2
    } else if (command == '2') {
      digitalWrite(relay2, LOW);  // Turn OFF appliance connected to relay2
    }

    // Control relay3
    if (command == '5') {
      digitalWrite(relay3, HIGH); // Turn ON appliance connected to relay3
    } else if (command == '4') {
      digitalWrite(relay3, LOW);  // Turn OFF appliance connected to relay3
    }

    // Control relay4
    if (command == '7') {
      digitalWrite(relay4, HIGH); // Turn ON appliance connected to relay4
    } else if (command == '6') {
      digitalWrite(relay4, LOW);  // Turn OFF appliance connected to relay4
    }
  }
}

Code Explanation:

    Pin Definitions: Assigns digital pins 2 to 5 to control four relays.​

    Setup Function: Initializes serial communication at 9600 baud rate and sets the relay pins as outputs.​
    Electro Invention+2Hackster+2Technical Ustad+2

    Loop Function: Continuously checks for incoming data from the Bluetooth module. Based on the received command, it turns the corresponding relay (and thus the connected appliance) ON or OFF.​
    Hackster+1Utmel+1

Setting Up the Bluetooth Communication:

    Pairing the HC-05 Module:

        Power on the Arduino and HC-05 module.​
        Technical Ustad+3Electro Invention+3Utmel+3

        On your smartphone, enable Bluetooth and pair with the HC-05 module (default pairing code is usually '1234').​
        Electro Invention

    Using a Bluetooth Terminal App:

        Install a Bluetooth terminal app on your smartphone (e.g., Bluetooth Terminal).​

        Open the app, connect to the HC-05 module, and send commands ('1', '0', '3', '2', etc.) to control the appliances.​

Safety Precautions:

    Ensure that all connections, especially those involving high-voltage appliances, are secure and insulated.​

    Use relays rated appropriately for the appliances you intend to control.​

    Consider implementing additional safety features, such as overcurrent protection, to safeguard your devices and users.​

This setup provides a basic framework for controlling up to four appliances via Bluetooth using an Arduino. You can expand the system by adding more relays and modifying the code accordingly to suit your home automation needs.​

Note: Always exercise caution when working with electrical components, especially when interfacing with high-voltage appliances.​

